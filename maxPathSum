# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def maxPathSum(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        if not root:
            return 0
        maxr = [root.val]
        self.dfs(root, maxr)
        return maxr[0]
    def dfs(self, root, maxr):
        if not root:
            return 0
        leftmax = self.dfs(root.left, maxr)
        rightmax = self.dfs(root.right, maxr)
        leftmax = max(leftmax, 0)
        rightmax = max(rightmax, 0)
        maxr[0] = max(maxr[0], root.val + leftmax + rightmax)
        return root.val + max(leftmax, rightmax, 0)
        
