# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def isValidBST(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        return self.isValidRecursive(root, float('-inf'), float('inf'))

    def isValidRecursive(self, root, left, right):
        if not root:
            return True
        if (root.val<=left) or (root.val>=right):
            return False
        return (self.isValidRecursive(root.left, left, root.val) and 
        self.isValidRecursive(root.right, root.val, right))
        
