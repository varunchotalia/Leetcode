# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def maxDepth(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        #iterative dfs preorder traversal
        if not root:
            return 0
        stack = [[root, 1]]
        res = 1
        while stack:
            node, depth = stack.pop()
            if node:
                if depth>res:
                    res = depth
                stack.append([node.left, depth+1])
                stack.append([node.right, depth+1])
        return res
